package Frame;

import dao.FolderDao;

import java.awt.Component;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.Vector;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;

import Frame.DataBaseInit;
import po.File;
import po.Folder;
import po.User;
import service.FileService;
import service.FolderService;
import service.Locality;

/**
 *
 * @author 蓝云甫
 */
public class MainJFrame extends javax.swing.JFrame {
    public User user;      //登录的用户
    public  ArrayList<String> fNameList = new ArrayList<String>();              //用于存放用户的文件夹
    Folder currentFolder = null;                   //当前正在使用的文件夹
    File currentFile = null;                       //当前正在使用的文件
    public ArrayList<String> recentFileList = new ArrayList<String>();              //存放最近编辑的文件
    
    /**
     * Creates new form MainJFrame
     */
    public MainJFrame() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        cloudConfigButton = new javax.swing.JButton();
        loginPanel = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        loginButton = new javax.swing.JButton();
        registButton = new javax.swing.JButton();
        userName = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        createFolderButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jlist = new javax.swing.JList<>();
        jPanel2 = new javax.swing.JPanel();
        foldlerFileNameText = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
   //     jTextArea = new javax.swing.JTextArea();
        tap = new TextAreaPanel(this);
        saveButton = new javax.swing.JButton();
        tagText = new javax.swing.JTextField();
        changeTagButton = new javax.swing.JButton();
        createFileButton = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jRecentFileList = new javax.swing.JList<>();
        initDatabaseButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("微软雅黑", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 204, 255));
        jLabel1.setText("在线文本编辑器");

        cloudConfigButton.setBackground(new java.awt.Color(0, 255, 255));
        cloudConfigButton.setText("云平台配置");
        cloudConfigButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cloudConfigButtonActionPerformed(evt);
            }
        });

        loginPanel.setBackground(new java.awt.Color(255, 255, 255));
        loginPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel2.setFont(new java.awt.Font("微软雅黑", 1, 14)); // NOI18N
        jLabel2.setText("用户");

        loginButton.setBackground(new java.awt.Color(0, 204, 204));
        loginButton.setText("登录");
        loginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginButtonActionPerformed(evt);
            }
        });

        registButton.setBackground(new java.awt.Color(0, 204, 204));
        registButton.setText("注册");
        registButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registButtonActionPerformed(evt);
            }
        });

        userName.setBorder(null);

        javax.swing.GroupLayout loginPanelLayout = new javax.swing.GroupLayout(loginPanel);
        loginPanel.setLayout(loginPanelLayout);
        loginPanelLayout.setHorizontalGroup(
            loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loginPanelLayout.createSequentialGroup()
                .addGroup(loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(loginPanelLayout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(userName, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(loginPanelLayout.createSequentialGroup()
                        .addComponent(loginButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(registButton)))
                .addContainerGap())
        );
        loginPanelLayout.setVerticalGroup(
            loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loginPanelLayout.createSequentialGroup()
                .addGroup(loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(userName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addGroup(loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(loginButton)
                    .addComponent(registButton))
                .addContainerGap())
        );

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel3.setFont(new java.awt.Font("微软雅黑", 1, 14)); // NOI18N
        jLabel3.setText("文件夹");

        createFolderButton.setBackground(new java.awt.Color(0, 204, 204));
        createFolderButton.setText("创建");
        createFolderButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createFolderButtonActionPerformed(evt);
            }
        });

        jlist.setBackground(new java.awt.Color(204, 255, 204));
        jlist.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jlist.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jlistMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jlist);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(createFolderButton))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(createFolderButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        foldlerFileNameText.setFont(new java.awt.Font("微软雅黑", 1, 14)); // NOI18N
        foldlerFileNameText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                foldlerFileNameTextActionPerformed(evt);
            }
        });

        jTable.setAutoCreateRowSorter(true);
        jTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null}
            },
            new String [] {
                "标题", "标签", "创建时间", "更新时间", "大小"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTable);

        jScrollPane2.setViewportView(jScrollPane3);

        /*
        jTextArea.setColumns(20);
        jTextArea.setRows(5);
        */
        jScrollPane4.setViewportView(tap);

        saveButton.setBackground(new java.awt.Color(0, 255, 255));
        saveButton.setText("保存");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        tagText.setFont(new java.awt.Font("微软雅黑", 0, 14)); // NOI18N
        tagText.setText("jTextField1");

        changeTagButton.setBackground(new java.awt.Color(0, 204, 204));
        changeTagButton.setText("修改标签");
        changeTagButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeTagButtonActionPerformed(evt);
            }
        });

        createFileButton.setBackground(new java.awt.Color(0, 204, 204));
        createFileButton.setText("创建文件");
        createFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createFileButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 573, Short.MAX_VALUE)
                    .addComponent(jScrollPane4)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(foldlerFileNameText, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(createFileButton)
                        .addGap(27, 27, 27))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(tagText, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(changeTagButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(saveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(foldlerFileNameText, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(createFileButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tagText, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(changeTagButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(saveButton))
                .addContainerGap())
        );

        jScrollPane2.getAccessibleContext().setAccessibleDescription("");

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        jLabel4.setFont(new java.awt.Font("微软雅黑", 1, 14)); // NOI18N
        jLabel4.setText("最近编辑");

        jRecentFileList.setBackground(new java.awt.Color(204, 255, 204));
        jRecentFileList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jRecentFileListMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(jRecentFileList);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5))
        );

        initDatabaseButton.setBackground(new java.awt.Color(0, 204, 204));
        initDatabaseButton.setText("初始化数据库");
        initDatabaseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                initDatabaseButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(initDatabaseButton)
                .addGap(18, 18, 18)
                .addComponent(cloudConfigButton)
                .addGap(23, 23, 23))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(loginPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cloudConfigButton)
                    .addComponent(initDatabaseButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(loginPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>                        

    private void cloudConfigButtonActionPerformed(java.awt.event.ActionEvent evt) {                                                  
        // TODO add your handling code here:
    }                                                 

    private void loginButtonActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // TODO add your handling code here:
        //清空上一个用户的数据
        this.user = null;
        this.currentFile = null;
        this.currentFolder = null;
        this.userName.setText("");
        this.tagText.setText("");
        this.tap.ta.setText("");
        this.foldlerFileNameText.setText("");
        fNameList.clear();
        clearTable();
        
        this.jlist.setListData((String[]) fNameList.toArray(new String[0]));
        this.registButton.setVisible(false);
        this.loginButton.setVisible(false);
        LoginJFrame ljf = new LoginJFrame(null, this, true);
        ljf.setVisible(true);
    }                                           

    private void registButtonActionPerformed(java.awt.event.ActionEvent evt) {                                             
        // TODO add your handling code here:
        RegistJFrame rjf = new RegistJFrame(null, this, true);
        rjf.setVisible(true);
    }                                            

    private void jlistMouseClicked(java.awt.event.MouseEvent evt) {                                   
        // TODO add your handling code here:
        // 添加 双击事件监听器，双击表示打开文件夹
        if(evt.getClickCount() == 2){
        //    System.out.println("双击");
        //右边区域全都先清空
            this.currentFile = null;                
            this.tagText.setText("");
            this.tap.ta.setText("");
           // this.jTextArea.setLineWrap(true);       //设置自动换行
            //清空jTable内容
            clearTable();
            
            this.jScrollPane2.setViewportView(this.jTable);
            JList myList = (JList) evt.getSource();
            if(myList.getSelectedIndex() >= 0){
                int index = myList.getSelectedIndex();    //已选项的下标
                Object obj = myList.getModel().getElementAt(index);  //取出数据
                String folderName = obj.toString();
                //根据文件夹的名字 把相应的数据放到面板的右侧显示
                foldlerFileNameText.setText("文件夹" + folderName + "中的文件");
                Folder folder = FolderService.searchFolderByNameUserID(user.getId(), folderName);
                setFolder(folder);
                //显示对应的文件
                showAllFiles();  
            //    System.out.println("文件夹的名字是" + folder.getName());
            }
            
            
        }
        // 如果是鼠标右键，则显示弹出菜单
        //e.getButton() 返回值有 1，2，3。1代表鼠标左键，3代表鼠标右键
	//jList.getSelected() 返回的是选中的JList中的项数。
        if (evt.getButton() == 3) {
            JList myList = (JList) evt.getSource();
            if(myList.getSelectedIndex() >= 0){
                int index = myList.getSelectedIndex();    //已选项的下标
                Object obj = myList.getModel().getElementAt(index);  //取出数据
                String folderName = obj.toString();
                //showPopupMenu(evt.getComponent(), evt.getX(), evt.getY(), folderName);	//显示菜单
                confirmDelete(folderName, index);
            } 
        }
    }                                  
    
    private void createFolderButtonActionPerformed(java.awt.event.ActionEvent evt) {                                                   
        // TODO add your handling code here:
        if(user == null){
            showMessageDialog("请先登录用户");
            return;
        }
        FolderCreateJFrame cff = new FolderCreateJFrame(null, this, true);
        cff.setVisible(true);
    }                                                  

    private void foldlerFileNameTextActionPerformed(java.awt.event.ActionEvent evt) {                                                    
        // TODO add your handling code here:
    }                                                   

    private void createFileButtonActionPerformed(java.awt.event.ActionEvent evt) {                                                 
        // TODO add your handling code here:
        if(this.currentFolder == null){
            showMessageDialog("请先选择文件夹");
            return;
        }
       FileCreateJFrame cfj = new FileCreateJFrame(null, this, true);
        cfj.setVisible(true);
    }                                                

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
        if(currentFile == null){
            showMessageDialog("请先选择文件");
            return;
        }
         String filePath = user.getAccount() + "/" + currentFolder.getName() + "/" + currentFile.getTitle();
         Locality.writeFile(filePath, tap.ta);                  //本地化更新
         //数据库更新
         //获取当前时间
         java.util.Date date = new java.util.Date();
         Timestamp timestamp = new Timestamp(date.getTime());
         currentFile.setTag(this.tagText.getText());
         currentFile.setModifiedTime(timestamp);
         int fileSize = (this.tap.ta.getText().length())/1024 + 1;
         currentFile.setSize(fileSize + "K");
         if(FileService.updateFile(currentFile)){
             showMessageDialog("保存成功");
             this.tap.ta.setText("");            //把当前Text设置为空
             this.tagText.setText("");
             //重新刷新文件列表的信息
             showAllFiles();
             //重新刷新最近编辑的文件列表
             this.recentFileList.clear();
             this.jRecentFileList.setListData((String[]) recentFileList.toArray(new String[0]));
             showRecentFiles();
         }
         else{
              showMessageDialog("保存失败");
         }
    }                                          

    private void changeTagButtonActionPerformed(java.awt.event.ActionEvent evt) {                                                
        // TODO add your handling code here:
        if(this.currentFile == null){
            showMessageDialog("请先选择文件");
            return;
        }
        this.tagText.setEditable(true);
    }                                               

    private void jTableMouseClicked(java.awt.event.MouseEvent evt) {                                    
        // TODO add your handling code here:
        if(evt.getClickCount() == 2){           //如果双击两次
            //先将文件编辑区域和标签区域清空
            this.tap.ta.setText("");
            this.tagText.setText("");
            this.tagText.setEditable(false);
            
            int row = this.jTable.getSelectedRow();     //获得点击的行数
            if(row >= 0){           //鼠标没有点击到Table外部
                String fileName = (String) this.jTable.getValueAt(row, 0);       //获得文件的名称
                //打开文件，将文件内容显示到主屏幕中
                String filePath = user.getAccount() + "/" + currentFolder.getName() + "/" + fileName;
                Locality.readFile(filePath, tap.ta);
                //设置当前主程序中正在操作的文件
                File file = null;
                file = FileService.findFileByFileNameFolderID(currentFolder.getId(), fileName);
                if(file != null){
                    setFile(file);
                    //将文件的标签信息显示在主页面相应位置
                    this.tagText.setText(file.getTag());
                    this.tagText.setEditable(false);
                }
            }
        }
    }                                   
    
    /**
     * 
     * @param evt 
     */
    private void jRecentFileListMouseClicked(java.awt.event.MouseEvent evt) {                                             
        // TODO add your handling code here:
    }                                            

    private void initDatabaseButtonActionPerformed(java.awt.event.ActionEvent evt) {                                                   
        // TODO add your handling code here:
        int result = JOptionPane.showConfirmDialog(
                        this,
                        "确认初始化吗？数据库中的所有数据和本地文件夹都会被删除？",
                        "提示",
                        JOptionPane.YES_NO_CANCEL_OPTION
                );
                
                if(result == JOptionPane.YES_OPTION){
                    DataBaseInit.initDataBase();
                    Locality.deleteDirectory("");
                    showMessageDialog("初始化成功");
                    this.user = null;
                    this.currentFile = null;
                    this.currentFolder = null;
                    this.loginButton.setVisible(true);
                    this.registButton.setVisible(true);
                    this.userName.setText("");
                    this.tagText.setText("");
                    this.tap.ta.setText("");
                    this.foldlerFileNameText.setText("");
                    fNameList.clear();
                    this.recentFileList.clear();
                     clearTable();
        
                    this.jlist.setListData((String[]) fNameList.toArray(new String[0]));
                    this.jRecentFileList.setListData((String[]) recentFileList.toArray(new String[0]));
                }
                else if(result == JOptionPane.NO_OPTION){
                    return;
                }
    }                                                  
    /**
     * 用于初始化设置用户的文件列
     */
    public void setFolderList(){
        // 只能单选
        jlist.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        //通过用户的编号找到它的文件夹，并把它们放在一个列表中
        ArrayList<Folder> list = new ArrayList<Folder>();
	list = FolderDao.findFolderByUserID(user.getId());
	//如果想要将文件夹名显示出来，首先需要将它们放到一个数组里面
	for(int i = 0;i < list.size();i++){
            fNameList.add(list.get(i).getName());
	}
	//设置jlist的内容
	jlist.setListData((String[]) fNameList.toArray(new String[0]));
    }
    
    /**
     * 添加文件夹后刷新文件夹列表
     * @param fName 
     */
    public void flushFolderListAdd(String fName){
        fNameList.add(fName);
        jlist.setListData((String[]) fNameList.toArray(new String[0]));
    }
    
    /**
     * 删除文件夹后刷新文件夹列表
     * @param index 
     */
    public void flushFolderListDelete(int index){
        fNameList.remove(index);
        jlist.setListData((String[]) fNameList.toArray(new String[0]));
    }
    /**
     * 设置主页面用户姓名
     * @param name 
     */
    public void setUserName(String name){
        this.userName.setText(name);
        System.out.println(name);
    }
    
    /**
     * 设置当前在登录的用户
     * @param user 
     */
    public void setUser(User user){
        this.user = user;
    }
    
    public void setFolder(Folder folder){
     //   System.out.println("文件夹是空的吗" + folder.getName());
        this.currentFolder = folder;
    }
    
    public void setFile(File file){
        this.currentFile = file;
    }
    /**
     * 在表格里面显示所有的文件
     */
    public void showAllFiles(){
        ArrayList<File> list;
        if(currentFolder != null){
            list = FileService.findFileByFolderID(currentFolder.getId());
        }
        else{
            showMessageDialog("请先选择文件夹");
            return ;
        }
        DefaultTableModel dtm = (DefaultTableModel) this.jTable.getModel();
        //清空表的信息
        while(dtm.getRowCount() > 0){
            dtm.removeRow(0);
        }
        //显示数据
        for(File file : list){
            Vector vt = new Vector();
            vt.add(file.getTitle());
            vt.add(file.getTag());
            vt.add(file.getCreateTime().toString());
            vt.add(file.getModifiedTime().toString());
            vt.add(file.getSize());
            dtm.addRow(vt);
        }
    }
    
    /**
     * 显示最近编辑的五个文件
     */
    public void showRecentFiles(){
    	this.recentFileList.clear();
        ArrayList<File> list;
        if(this.user != null){
            list = FileService.findFileByUserID(user.getId());
        }
        else{
            showMessageDialog("请先登录用户");
            return ;
        }
        //如果想要将文件夹名显示出来，首先需要将它们放到一个数组里面
        for(int i = 0;i < list.size() && i < 5;i++){
        	//  System.out.println("最近编辑的文件名" + list.get(i).getTitle());
            	this.recentFileList.add(list.get(i).getTitle());
        }
        //设置jlist的内容
        this.jRecentFileList.setListData((String[])recentFileList.toArray(new String[0]));
        
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton changeTagButton;
    private javax.swing.JButton cloudConfigButton;
    private javax.swing.JButton createFileButton;
    private javax.swing.JButton createFolderButton;
    private javax.swing.JTextField foldlerFileNameText;
    private javax.swing.JButton initDatabaseButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JList<String> jRecentFileList;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTable jTable;
//    private javax.swing.JTextArea jTextArea;
    private TextAreaPanel tap;
    private javax.swing.JList<String> jlist;
    private javax.swing.JButton loginButton;
    private javax.swing.JPanel loginPanel;
    private javax.swing.JButton registButton;
    private javax.swing.JButton saveButton;
    private javax.swing.JTextField tagText;
    private javax.swing.JTextField userName;
    // End of variables declaration                   
    
    public void confirmDelete(String folderName, int index){
         /*
                 * 返回用户点击的选项, 值为下面三者之一:
                 *     是:   JOptionPane.YES_OPTION
                 *     否:   JOptionPane.NO_OPTION
                 *     取消: JOptionPane.CANCEL_OPTION
                 *     关闭: JOptionPane.CLOSED_OPTION
                 */
                int result = JOptionPane.showConfirmDialog(
                        this,
                        "确认删除？",
                        "提示",
                        JOptionPane.YES_NO_CANCEL_OPTION
                );
                
                if(result == JOptionPane.YES_OPTION){
                    Folder folder = new Folder();
                    folder.setName(folderName);
                    folder.setuID(user.getId());
                    FolderService.deleteFolder(folder);		//调用删除文件夹
                    //删除除文件夹下的所有文件
                    FileService.deleteFileByFolderID(folder.getId());
                    showRecentFiles();
                    flushFolderListDelete(index);
                }
                else if(result == JOptionPane.NO_OPTION){
                    return;
                }
    }
    
    /**
     * 显示用户提示信息
     * @param message 
     */
    public  void showMessageDialog(String message){
        JOptionPane.showMessageDialog(
                    this,
                    message,
                    "消息提示",
                    JOptionPane.WARNING_MESSAGE
            );
            return;
    }
    
    /**
     * 清空文件表格信息
     */
    public void clearTable(){
        int row = this.jTable.getRowCount();
        DefaultTableModel dtm = (DefaultTableModel) this.jTable.getModel();
        for(int i = 0;i < row;i++){
            dtm.removeRow(0);
        }
    }
    /*
    private void showPopupMenu(Component component, int x, int y, String folderName) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        //JPopupMenu popupMenu = new JPopupMenu();
       
	Folder folder = new Folder();
	folder.setName(folderName);
	folder.setuID(user.getId());
	FolderService.deleteFolder(folder);		//调用删除文件夹
	fNameList.remove(folderName);
	
    }
    */
}

